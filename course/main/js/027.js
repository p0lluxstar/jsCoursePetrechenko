"use strict";

// Методы массивов. Метод FOR OF. Метод forEach позволяет тоже перебрать все элементы массива. Метод .length (длина массива, сколько элементов) работает по следующемму прицнипу - он видит какой порядковый номер у последнего элемента массива и увеличивает это значенине на единицу. Методы split, join, sort. Все методы это функции. Promt не срабатывает внутри vsc потому что эта команда сужществует только в браузере.

// Псевдообъект это такой объект структура которого совпадает со структурой массива, но без возможности использования всех методов. Эта структура, которая просто хранит данные.

const arr = [1, 2, 3, 4, 5];

arr.pop(); // удаляет последний элементв в массиве
arr.push(10); // добавялет элемент в конец

console.log(arr);

// перебор всех элементов массива

for (let i = 0; i < arr.length; i++){
    console.log(arr[i]);
}

// еще одни способ перебрать все элементы массива

for (let value of arr){ //for of работает только с массиваподобными сущностями, есть еще for in который работает с объектами
    console.log(value);
}

const arr2 = [1, 2, 3, 4, 5];
arr2[99] = 0;
console.log(arr2.length); // 100
console.log(arr2); // [ 1, 2, 3, 4, 5, <94 empty items>, 0 ] empty items - пустые ячейки

// метод forEach

const arr3 = [1, 2, 3, 4, 5];

arr3.forEach(function(item, i, arr3){
    console.log(`${i}: ${item} внутри массива ${arr3}`);
});

// 0: 1 внутри массива 1,2,3,4,5
// 1: 2 внутри массива 1,2,3,4,5
// 2: 3 внутри массива 1,2,3,4,5
// 3: 4 внутри массива 1,2,3,4,5
// 4: 5 внутри массива 1,2,3,4,5

//  метод (функуия) forEach позволяет гибко перебрать все элементы внутри массива. В этот метод можно передать три аргумента. аргумент item - это каждый элемент массива, i - номер по порядку, это массив с который хотим перебрать

// Для перебора чаще используют метод forEach. Но у методоа for of есть плюс, потому что мы можем остановить его в нужный нам момент с помоьщью break 

// Есть еще несколько методов перебора элементов массива например arr.map он перебирает и модифицирует массив, еще arr.filter, позволяет применить в переборе фильтр, например оставить только четные числа. есть еще несколько. Все они относятся к типу трансформации



// метод split позволяет например полученные строковые данные записывать в массив

const str = prompt('', ''); 
const products = str.split(", "); // , - знак разделителя, этот знак должне быть таким же как в promt. А вообще можно кроме запятых исользовать точку, точку с запятой  
console.log(products);



// join это обратный метод, обратный методу split. Строчные данные превращает в массив
const str2 = prompt('', ''); 
const products2 = str2.join("; "); // , - знак разделителя, этот знак должне быть таким же как в promt.
console.log(products);

// sort - метод сортировки, сортирует строчные элеметны например в алфовитном порядке

const str3 = ['w', 'c', 'a', 'z', 'o'];
str3.sort();
console.log(str3); // получим массив [ 'a', 'c', 'o', 'w', 'z' ]

// что бы отсортировать цифны нужно следующие 

const str4 = ['5', '1', '22', '7', '1'];
str4.sort(compareNum);

function compareNum(a, b){ // передаем два аргумента, котрые сравниваются
    return a - b;
}

console.log(str4); // [ '1', '1', '5', '7', '22' ]